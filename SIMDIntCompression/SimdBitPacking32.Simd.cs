
// This file was automatically generated by generate.fsx. Do not modify directly.
// 
// To regenerate this file, run the following command:
// dotnet fsi .\scripts\generate.fsx > .\SIMDIntCompression\SimdBitPacking32.Simd.cs
//
// References:
// https://github.com/fast-pack/SIMDCompressionAndIntersection

namespace SIMDIntCompression;

using System.Runtime.Intrinsics;

using V128i = System.Runtime.Intrinsics.Vector128<uint>;

/// <summary>
/// SIMD bit packing/unpacking for 32-bit (unsigned) integers.
/// </summary>
public static unsafe partial class SimdBitPacking32
{
    private const int VectorSize = 128;


    private static void Pack1(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack2(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack3(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack4(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack5(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack6(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack7(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack8(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack9(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack10(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack11(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack12(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack13(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 11; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack14(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack15(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 11; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 13; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack16(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack17(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 15; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 13; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 11; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack18(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack19(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 13; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 15; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 17; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 11; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack20(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack21(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 11; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 13; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 15; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 17; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 19; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack22(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack23(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 13; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 22; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 17; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 21; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 11; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 15; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 19; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack24(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack25(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 21; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 17; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 13; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 23; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 19; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 15; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 22; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 11; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack26(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 22; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 22; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack27(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 15; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 25; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 13; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 23; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 11; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 21; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 26; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 19; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 17; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 22; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack28(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack29(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 15; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 21; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 27; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 13; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 19; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 22; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 25; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 28; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 11; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 17; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 23; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 26; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack30(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 22; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 26; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 28; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 22; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 26; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 28; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack31(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 31;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 1; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 30;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 2; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 29;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 3; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 28;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 4; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 27;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 5; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 26;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 6; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 25;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 7; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 24;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 8; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 23;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 9; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 22;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 10; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 21;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 11; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 20;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 12; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 19;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 13; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 18;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 14; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 17;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 15; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 16;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 16; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 15;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 17; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 14;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 18; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 13;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 19; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 12;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 20; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 11;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 21; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 10;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 22; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 9;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 23; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 8;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 24; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 7;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 25; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 6;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 26; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 5;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 27; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 4;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 28; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 3;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 29; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 2;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        outReg = inReg >> 30; 
        inReg = Vector128.Load((uint*)++inVec);

        outReg |= inReg << 1;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Pack32(uint* input, V128i* output)
    {
        V128i* inVec = (V128i*)input;
        V128i outReg;
        V128i inReg = Vector128.Load((uint*)inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
        ++output;
        inReg = Vector128.Load((uint*)++inVec);

        outReg = inReg;
        Vector128.Store(outReg, (uint*)output);
    }


    private static void Unpack1(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg1 = Vector128.Load((uint*)input);
        V128i inReg2 = inReg1;
        V128i outReg1, outReg2, outReg3, outReg4;
        V128i mask = Vector128.Create(1u);

        int shift = 0;

        for (nuint i = 0; i < 8; i++)
        {
            outReg1 = (inReg1 >> (shift++) ) & mask;
            outReg2 = (inReg2 >> (shift++) ) & mask;
            outReg3 = (inReg1 >> (shift++) ) & mask;
            outReg4 = (inReg2 >> (shift++) ) & mask;
            Vector128.Store(outReg1, (uint*)outVec++);
            Vector128.Store(outReg2, (uint*)outVec++);
            Vector128.Store(outReg3, (uint*)outVec++);
            Vector128.Store(outReg4, (uint*)outVec++);
        } 

    }



    private static void Unpack2(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 2) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack3(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 3) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 3 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 3 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack4(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 4) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack5(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 5) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 5 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 5 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 5 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 5 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack6(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 6) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 6 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 6 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 6 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 6 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack7(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 7) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 7 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 7 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 7 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 7 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 7 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 7 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack8(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 8) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack9(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 9) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 9 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 9 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 9 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 9 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 9 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 9 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 9 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 9 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack10(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 10) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 10 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 10 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 10 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 10 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 10 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 10 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 10 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 10 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack11(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 11) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 11 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 11 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 11 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 11 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 11 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 11 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 11 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 11 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 11 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 11 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack12(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 12) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 12 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 12 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 12 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 12 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 12 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 12 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 12 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 12 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack13(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 13) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 11) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 13 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack14(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 14) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 14 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack15(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 15) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 13) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 11) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 15 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack16(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 16) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack17(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 17) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 11) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 13) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 17 - 15) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack18(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 18) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 18 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack19(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 19) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 11) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 17) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 15) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 19 - 13) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack20(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 20) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 20 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack21(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 21) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 19) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 17) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 15) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 13) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 21 - 11) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack22(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 22) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 22 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack23(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 23) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 19) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 15) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 11) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 21) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 17) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 22) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 13) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 23 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack24(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 24) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 24 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack25(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 25) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 11) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 22) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 15) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 19) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 23) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 13) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 17) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 21) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 25 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack26(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 26) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 22) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 22) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 26 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack27(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 27) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 22) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 17) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 19) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 26) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 21) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 11) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 23) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 13) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 25) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 15) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 27 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack28(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 28) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 28 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack29(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 29) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 26) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 23) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 17) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 11) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 28) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 25) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 22) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 19) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 13) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1 & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 27) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 21) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 15) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 29 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack30(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 30) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 28) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 26) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 22) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2;
        inReg = Vector128.Load((uint*)++input);

        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 28) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 26) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 22) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 30 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack31(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        V128i inReg = Vector128.Load((uint*)input);
        V128i outReg;
        V128i mask = Vector128.Create((1u << 31) - 1);

        outReg = inReg & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 31;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 30) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 30;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 29) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 29;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 28) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 28;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 27) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 27;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 26) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 26;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 25) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 25;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 24) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 24;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 23) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 23;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 22) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 22;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 21) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 21;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 20) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 20;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 19) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 19;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 18) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 18;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 17) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 17;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 16) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 16;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 15) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 15;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 14) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 14;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 13) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 13;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 12) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 12;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 11) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 11;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 10) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 10;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 9) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 9;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 8) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 8;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 7) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 7;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 6) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 6;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 5) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 5;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 4) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 4;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 3) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 3;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 2) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 2;
        inReg = Vector128.Load((uint*)++input);

        outReg |= (inReg << 31 - 1) & mask;
        Vector128.Store(outReg, (uint*)outVec++);

        outReg = inReg >> 1;
        Vector128.Store(outReg, (uint*)outVec++);

    }


    private static void Unpack32(V128i* input, uint* output)
    {
        V128i* outVec = (V128i*)output;
        for (int outer = 0; outer < 32; outer++)
            Vector128.Store(Vector128.Load(input++), outVec++);
    }

    /// <summary>
    /// Pack the input array of integers into the output array of vectors.
    /// </summary>
    /// <param name="input">The input array of integers.</param>
    /// <param name="output">The output array of vectors.</param>
    /// <param name="bit">The bit width.</param>
    public static void Pack(uint* input, V128i* output, int bit)
    {
        switch (bit)
        {
            
            case 1:
                Pack1(input, output);
                break;
            
            case 2:
                Pack2(input, output);
                break;
            
            case 3:
                Pack3(input, output);
                break;
            
            case 4:
                Pack4(input, output);
                break;
            
            case 5:
                Pack5(input, output);
                break;
            
            case 6:
                Pack6(input, output);
                break;
            
            case 7:
                Pack7(input, output);
                break;
            
            case 8:
                Pack8(input, output);
                break;
            
            case 9:
                Pack9(input, output);
                break;
            
            case 10:
                Pack10(input, output);
                break;
            
            case 11:
                Pack11(input, output);
                break;
            
            case 12:
                Pack12(input, output);
                break;
            
            case 13:
                Pack13(input, output);
                break;
            
            case 14:
                Pack14(input, output);
                break;
            
            case 15:
                Pack15(input, output);
                break;
            
            case 16:
                Pack16(input, output);
                break;
            
            case 17:
                Pack17(input, output);
                break;
            
            case 18:
                Pack18(input, output);
                break;
            
            case 19:
                Pack19(input, output);
                break;
            
            case 20:
                Pack20(input, output);
                break;
            
            case 21:
                Pack21(input, output);
                break;
            
            case 22:
                Pack22(input, output);
                break;
            
            case 23:
                Pack23(input, output);
                break;
            
            case 24:
                Pack24(input, output);
                break;
            
            case 25:
                Pack25(input, output);
                break;
            
            case 26:
                Pack26(input, output);
                break;
            
            case 27:
                Pack27(input, output);
                break;
            
            case 28:
                Pack28(input, output);
                break;
            
            case 29:
                Pack29(input, output);
                break;
            
            case 30:
                Pack30(input, output);
                break;
            
            case 31:
                Pack31(input, output);
                break;
            
            case 32:
                Pack32(input, output);
                break;
            
            default:
                throw new ArgumentException("Unsupported bit width.");
        }
    }

    /// <summary>
    /// Unpack the input array of vectors into the output array of integers.
    /// </summary>
    /// <param name="input">The input array of vectors.</param>
    /// <param name="output">The output array of integers.</param>
    /// <param name="bit">The bit width.</param>
    /// <returns>The last vector.</returns>
    public static void Unpack(V128i* input, uint* output, int bit)
    {
        switch (bit)
        {
            
            case 1:
                Unpack1(input, output);
                break;
            
            case 2:
                Unpack2(input, output);
                break;
            
            case 3:
                Unpack3(input, output);
                break;
            
            case 4:
                Unpack4(input, output);
                break;
            
            case 5:
                Unpack5(input, output);
                break;
            
            case 6:
                Unpack6(input, output);
                break;
            
            case 7:
                Unpack7(input, output);
                break;
            
            case 8:
                Unpack8(input, output);
                break;
            
            case 9:
                Unpack9(input, output);
                break;
            
            case 10:
                Unpack10(input, output);
                break;
            
            case 11:
                Unpack11(input, output);
                break;
            
            case 12:
                Unpack12(input, output);
                break;
            
            case 13:
                Unpack13(input, output);
                break;
            
            case 14:
                Unpack14(input, output);
                break;
            
            case 15:
                Unpack15(input, output);
                break;
            
            case 16:
                Unpack16(input, output);
                break;
            
            case 17:
                Unpack17(input, output);
                break;
            
            case 18:
                Unpack18(input, output);
                break;
            
            case 19:
                Unpack19(input, output);
                break;
            
            case 20:
                Unpack20(input, output);
                break;
            
            case 21:
                Unpack21(input, output);
                break;
            
            case 22:
                Unpack22(input, output);
                break;
            
            case 23:
                Unpack23(input, output);
                break;
            
            case 24:
                Unpack24(input, output);
                break;
            
            case 25:
                Unpack25(input, output);
                break;
            
            case 26:
                Unpack26(input, output);
                break;
            
            case 27:
                Unpack27(input, output);
                break;
            
            case 28:
                Unpack28(input, output);
                break;
            
            case 29:
                Unpack29(input, output);
                break;
            
            case 30:
                Unpack30(input, output);
                break;
            
            case 31:
                Unpack31(input, output);
                break;
            
            case 32:
                Unpack32(input, output);
                break;
            
            default:
                throw new ArgumentException("Unsupported bit width.");
        }
    }
}

